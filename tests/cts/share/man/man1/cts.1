.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CTS 1"
.TH CTS 1 "2007-06-12" "perl v5.8.5" "User Contributed Perl Documentation"
.SH "NAME"
cts (Collaborative Testing System)
.SH "VERSION"
.IX Header "VERSION"
\&\s-1CTS:\s0 version 1.2
.SH "ABSTRACT"
.IX Header "ABSTRACT"
.Vb 3
\&  The Collaborative Testing System "CTS" is a collaboratively designed and
\&  developed testing system. It is meant to be used by multiple projects on
\&  multiple platforms with a minimum of effort.
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&   cts [options=value] [testfiles] [testsuites]
\&      Note: Most options can be repeated as many times as desired on the command line.
.Ve
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 1
\&      --cts|project : cts file : The default is to use the environmental variable CTS_FILE.
.Ve
.PP
.Vb 1
\&      --cpus|default_num_cpus|num_cpus :  The default number of cpus to run test problems
.Ve
.PP
.Vb 1
\&      --debug       : print debugging information
.Ve
.PP
.Vb 1
\&      --dir         : directory in which tests are run: defaults to ./testing
.Ve
.PP
.Vb 3
\&      --exec        : set serial executables, usually scripts
\&                        (--exec mycode=/wherever/some_code 
\&                         --exec my_other_code=/somewhere/whatever)
.Ve
.PP
.Vb 4
\&      --sexec       : set high performance serial executables 
\&                        which may need special treatment on some systems
\&                        (--sexec mycode=/wherever/some_code 
\&                         --sexec my_other_code=/somewhere/whatever)
.Ve
.PP
.Vb 4
\&      --pexec       : set parallel executables 
\&                        (--pexec myfastcode=/wherever/fast_code  
\&                         --pexec another_code=/somewhere/another_code)
\&      --help        : print this message
.Ve
.PP
.Vb 1
\&      --version     : print version information
.Ve
.PP
.Vb 1
\&      --maxthreads  : set maximum number of tests to submit at a time
.Ve
.PP
.Vb 1
\&      --nobatch     : do not submit jobs to the batch system
.Ve
.PP
.Vb 1
\&      --queue       : set the queue
.Ve
.PP
.Vb 2
\&      --reports     : specify the reports that you wish to generate. 
\&                       (--reports html --reports text)
.Ve
.PP
.Vb 3
\&      --cross_platform_reports: generate the reports from previous runs of cts
\&                       into a cross platform summary report
\&                       (--cross_platform_reports html --cross_platform_reports text)
.Ve
.PP
.Vb 1
\&      --cross_platform_base     : Sets the value of CROSS_PLATFORM_BASE
.Ve
.PP
.Vb 1
\&      --cross_platform_group    : Sets the value of CROSS_PLATFORM_GROUP
.Ve
.PP
.Vb 1
\&      --cross_platform_mail     : Sets the value of CROSS_PLATFORM_MAIL
.Ve
.PP
.Vb 1
\&      --cross_platform_pattern  : Sets the value of CROSS_PLATFORM_PATTERN
.Ve
.PP
.Vb 1
\&      --cross_platform_reporter : Sets the value of CROSS_PLATFORM_REPORTER
.Ve
.PP
.Vb 2
\&      --link        : specify files to be linked into the run_dir foreach test
\&                       (--link /data_dir/my_data_file --link ~/another_file)
.Ve
.PP
.Vb 1
\&      --footer      : specify an html string to place at the bottom of html report pages
.Ve
.PP
.Vb 1
\&      --header      : specify an html string to place at the top of html report pages
.Ve
.PP
.Vb 1
\&      --man         : print the cts manual pages and exit
.Ve
.PP
.Vb 2
\&      --fast        : use "ln -s" instead of "cp -r" to create the testing directory. 
\&                      This is meant to reduce startup time.
.Ve
.SH "CONFIGURATION AND ENVIRONMENT"
.IX Header "CONFIGURATION AND ENVIRONMENT"
.Vb 1
\&  The CTS uses three types of files; .cts files, .suite files and .test files.
.Ve
.SH ".cts FILES"
.IX Header ".cts FILES"
.Vb 2
\&  .cts files contain projects specific information such as where to look for
\&  testsuites and tests.
.Ve
.PP
.Vb 3
\&  Most items that can be configured in a .cts file are arrays. Multiple entries
\&  for the same item generally appends new entries to the existing array. Exceptions
\&  are listed below.
.Ve
.PP
.Vb 2
\&  There are three categories of configuration items in .cts files. These are Reporter items, 
\&  System items and TestHarness items.
.Ve
.Sh "\s-1REPORTER\s0"
.IX Subsection "REPORTER"
.IP "\s-1REPORTS\s0" 8
.IX Item "REPORTS"
.Vb 2
\&  These are the types of report that the user wishes cts to produce. The possible values
\&  are email, text and html.
.Ve
.IP "\s-1CROSS_PLATFORM_BASE\s0" 8
.IX Item "CROSS_PLATFORM_BASE"
.Vb 3
\&  This is the name of an nfs mounted directory. It is the top directory where cts should 
\&  try to store results for cross platform reporting
\&   CROSS_PLATFORM_BASE     : /usr/projects/packages/xtools/nightly
.Ve
.IP "\s-1CROSS_PLATFORM_GROUP\s0" 8
.IX Item "CROSS_PLATFORM_GROUP"
.Vb 2
\&  This is a unix group. Cts will change the group of the cross_platform results file to this group.
\&   CROSS_PLATFORM_GROUP    : cts-dev
.Ve
.IP "\s-1CROSS_PLATFORM_MAIL\s0" 8
.IX Item "CROSS_PLATFORM_MAIL"
.Vb 3
\&  This is the person or email group that will receive cross_platform reports when cts is run 
\&  with the --cross_platform_reports option.
\&   CROSS_PLATFORM_MAIL     : cts-team@lanl.gov
.Ve
.IP "\s-1CROSS_PLATFORM_MODE\s0" 8
.IX Item "CROSS_PLATFORM_MODE"
.Vb 2
\&  Cts uses this value to set the unix permissions on cross_platform results files. 
\&   CROSS_PLATFORM_MODE     : 0660
.Ve
.IP "\s-1CROSS_PLATFORM_PATTERN\s0" 8
.IX Item "CROSS_PLATFORM_PATTERN"
.Vb 8
\&  This item takes a little bit of explaining. The basic idea is to create a matrix of compilers, 
\&  compiler optimization levels, mpi implementations and systems on which a code team wishes to 
\&  run their nightly regression tests. This item tells cts how to store and retrieve results under 
\&  the CROSS_PLATFORM_BASE directory. A simpler implementation is coming soon. Currently, any 
\&  combination of ${system}, ${Fcompiler}, ${mpi} and ${type} may be used. Currently you must
\&  end the line with cts_results.txt. This also means that you must include text reports on the 
\&  REPORTS line.
\&   CROSS_PLATFORM_PATTERN  : ${system}/${Fcompiler}_${mpi}_${type}/cts_results.txt
.Ve
.IP "\s-1CROSS_PLATFORM_REPORTER\s0" 8
.IX Item "CROSS_PLATFORM_REPORTER"
.Vb 1
\&  This item is no longer relevant. It will soon be removed from the code.
.Ve
.Sh "\s-1SYSTEM\s0"
.IX Subsection "SYSTEM"
.Sh "\s-1TESTHARNESS\s0"
.IX Subsection "TESTHARNESS"
.SH ".suite FILES"
.IX Header ".suite FILES"
.Vb 2
\&    .suite or testsuite files contain lists of tests and included testsuites to
\&    be run together.
.Ve
.SH ".test FILES"
.IX Header ".test FILES"
.Vb 3
\&    .test files contain test specific information. To add a new test, create a
\&    directory named for the test. Include in the test directory any files
\&    required to run the test. Then include a test_name.test file.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 3
\&  The cts script is the heart of the CTS system.  It creates the
\&  test harness object and uses it to manages operations
\&  from executing tests, subsequent analysis, and reporting.
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.SH "KNOWN BUGS AND LIMITATIONS"
.IX Header "KNOWN BUGS AND LIMITATIONS"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
TestHarness::Harness
.PP
TestHarness::TestProblem
.PP
TestHarness::TestSuite
.PP
.Vb 2
\& To report problems or view project documentation go to
\& http:sourceforge-web.lanl.gov/projects/cts.
.Ve
.PP
.Vb 2
\& You can also contact the cts support team via email at 
\& cts-team@lanl.gov.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
David L. Aubrey, <dla@lanl.gov>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
.Vb 8
\& Copyright (2006). The Regents of the University of California. This material was
\& produced under U.S. Government contract W-7405-ENG-36 for Los Alamos National
\& Laboratory, which is operated by the University of California for the U.S. Department
\& of Energy. The U.S. Government has rights to use, reproduce, and distribute this
\& software.  NEITHER THE GOVERNMENT NOR THE UNIVERSITY MAKES ANY WARRANTY, EXPRESS OR
\& IMPLIED, OR ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE. If software is
\& modified to produce derivative works, such modified software should be clearly marked,
\& so as not to confuse it with the version available from LANL.
.Ve
.PP
.Vb 6
\& Additionally, this program is free software; you can redistribute it and/or modify
\& it under the terms of the GNU General Public License as published by the Free Software
\& Foundation; either version 2 of the License, or (at your option) any later version.
\& Accordingly, this program is distributed in the hope that it will be useful, but WITHOUT
\& ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
\& PARTICULAR PURPOSE. See the GNU General Public License for more details.
.Ve
